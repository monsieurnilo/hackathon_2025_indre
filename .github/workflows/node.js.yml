name: Node.js CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build_and_test:
    if: github.ref == 'refs/heads/dev'  # Condition pour dev
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v4

    # SETUP NODE + CACHE FOR BACKEND
    - name: Setup Node.js for backend
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Build backend
      working-directory: ./backend
      run: npm run build --if-present

    - name: Test backend
      working-directory: ./backend
      run: npm test

    # SETUP NODE + CACHE FOR FRONTEND
    - name: Setup Node.js for frontend
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build --if-present

    - name: Test frontend
      working-directory: ./frontend
      run: npm test

  deploy:
    if: github.ref == 'refs/heads/main'  # Condition pour main
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js for deployment
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    # Ajoute ici les étapes spécifiques au déploiement
    - name: Deploy application
      run: |
        echo "Deploying to production environment..."
